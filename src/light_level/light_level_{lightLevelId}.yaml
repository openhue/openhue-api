get:
  operationId: getLightLevel
  summary: Get light.
  description: Get details of a single light from its given `{lightId}`.
  tags:
    - LightLevel
  security:
    - HueApplicationKey: [ ]
  parameters:
    - name: lightId
      in: path
      schema:
        type: string
      required: true
      description: ID of the light.
  responses:
    200:
      description: Light Level Success Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../common/ApiResponse.yaml'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: './schemas/LightLevelGet.yaml'
    401:
      $ref: '../common/error.yaml#/components/responses/Unauthorized'
    403:
      $ref: '../common/error.yaml#/components/responses/Forbidden'
    404:
      $ref: '../common/error.yaml#/components/responses/NotFound'
    405:
      $ref: '../common/error.yaml#/components/responses/MethodNotAllowed'
    406:
      $ref: '../common/error.yaml#/components/responses/NotAcceptable'
    409:
      $ref: '../common/error.yaml#/components/responses/Conflict'
    429:
      $ref: '../common/error.yaml#/components/responses/TooManyRequests'
    500:
      $ref: '../common/error.yaml#/components/responses/InternalServerError'
    503:
      $ref: '../common/error.yaml#/components/responses/ServiceUnavailable'
    507:
      $ref: '../common/error.yaml#/components/responses/InsufficientStorage'
put:
  operationId: updateLightLevel
  summary: Update light.
  description: Update a single light from its given `{lightId}`.
  tags:
    - LightLevel
  security:
    - HueApplicationKey: [ ]
  parameters:
    - name: lightId
      in: path
      schema:
        type: string
      required: true
      description: ID of the light.
  requestBody:
    content:
      application/json:
        examples:
          Enable:
            summary: Enable light level.
            value:
              enabled: true
        schema:
          $ref: './schemas/LightLevelPut.yaml'
  responses:
    200:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../common/ApiResponse.yaml'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '../common/ResourceIdentifier.yaml'
    401:
      $ref: '../common/error.yaml#/components/responses/Unauthorized'
    403:
      $ref: '../common/error.yaml#/components/responses/Forbidden'
    404:
      $ref: '../common/error.yaml#/components/responses/NotFound'
    405:
      $ref: '../common/error.yaml#/components/responses/MethodNotAllowed'
    406:
      $ref: '../common/error.yaml#/components/responses/NotAcceptable'
    409:
      $ref: '../common/error.yaml#/components/responses/Conflict'
    429:
      $ref: '../common/error.yaml#/components/responses/TooManyRequests'
    500:
      $ref: '../common/error.yaml#/components/responses/InternalServerError'
    503:
      $ref: '../common/error.yaml#/components/responses/ServiceUnavailable'
    507:
      $ref: '../common/error.yaml#/components/responses/InsufficientStorage'
